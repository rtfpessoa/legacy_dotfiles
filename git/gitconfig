#
# rtfpessoa git Configuration
#

# core {{{
[core]
  editor = vim
  # pager = less -x4
  quotepath = false
  ignorecase = false
  excludesfile = ~/.gitignore

#}}}
# user {{{
[user]
  email = rtfrodrigo@gmail.com
  name = Rodrigo Fernandes

[github]
  user = rtfrodrigo@gmail.com

[gpg]
	program = /usr/bin/krgpg

[commit]
	gpgSign = true
  template = ~/.gitmessage

[tag]
	forceSignAnnotated = true

#}}}
# color {{{
[color]
  branch = auto
  diff = auto
  status = auto
  ui = true

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow
  frag = magenta
  old = red
  new = green

[color "status"]
  added = green
  changed = yellow
  untracked = red

# }}}
# push/pull/diff/options {{{
[push]
  default = upstream
[pull]
  default = current
[diff]
  memonicprefix = true
  # algorithm = minimal
[apply]
  whitespace = nowarn

#}}}
# alias {{{
[alias]
  # Top Commands
  ad = add -p
  ada = add -A .
  st = status -sb
  ps = push -u origin HEAD
  psf = push --force-with-lease -u origin HEAD
  pl = pull --rebase --autostash
  uc = reset --soft HEAD^
  co = checkout
  br = branch
  rhh = reset --hard HEAD
  gr = grep -Ii
  fe = fetch --force --prune --prune-tags --tags --recurse-submodules=yes --jobs=8 --verbose --progress
  clean-pack = "!f() { git fetch -p --all --progress && git gc --aggressive --prune=all --force; }; f"

  # Commit
  c = commit -S
  cm = commit -S -m
  ca = commit -S --amend --no-edit
  amend = commit -S --amend

  # Log
  filelog = log -u
  fl = log -u
  le = log --oneline --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
  ls1 = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
  lds = log --pretty=format:"%C(yellow)%h\\ %C(green)%ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short --graph
  ls = log --pretty=format:"%C(green)%h\\ %C(yellow)[%ad]%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
  lc  = "!f() { git ll "$1"^.."$1"; }; f"
  lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
  lg = log --pretty=format:'%Cred%h%Creset -%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  lag = log --graph
  lagp = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
  stup = log --pretty=format:'%Cred%h%Creset -%Creset %s %Cgreen(%cD) %C(bold blue)<%an>%Creset' --author=Rodrigo
  standup = log --pretty=format:'%Cred%h%Creset -%Creset %s %Cgreen(%cD) %C(bold blue)<%an>%Creset' --since yesterday --author=Rodrigo

  # Diff
  d = "!f() { git diff -M -C -U10 --patience "$(git symbolic-ref --short HEAD)" "$1"; }; f"
  dnw = "!f() { git diff -M -C -U10 --patience --word-diff=color "$(git symbolic-ref --short HEAD)" "$1"; }; f"
  dw = diff -M -C -U10 --patience
  dh = "!f() { git diff -M -C -U10 --patience "HEAD~${1-0}"; }; f"
  dh1 = dh 1
  dh2 = dh 2
  dh3 = dh 3
  dh4 = dh 4
  dh5 = dh 5
  dh6 = dh 6
  dc = diff --cached
  dlc = diff --cached HEAD^
  dr  = "!f() { git diff -M -C -U10 --patience "$1"^.."$1"; }; f"
  diffr  = "!f() { git diff -M -C -U10 --patience "$1"^.."$1"; }; f"

  # Misc
  cp = cherry-pick
  grep = grep -Ii
  ai = add --interactive
  bra = branch -ra
  purr = pull --rebase
  pr = pull --rebase

  # Stash
  sl = stash list
  sa = stash apply
  ss = stash save
  sc = stash clear
  sd = stash drop

  # Reset
    ## Soft
    r = reset
    r1 = reset HEAD~1
    r2 = reset HEAD~2
    r3 = reset HEAD~3
    r4 = reset HEAD~4
    r5 = reset HEAD~5
    ## Hard
    rh = reset --hard
    rh1 = reset --hard HEAD~1
    rh2 = reset --hard HEAD~2
    rh3 = reset --hard HEAD~3
    rh4 = reset --hard HEAD~4
    rh5 = reset --hard HEAD~5

  # Advanced
    ## List modified files in last commit
    dl = "!git ll -1"

    ## List all aliases
    la = "!git config -l | grep alias | cut -c 7-"

    ## Grep from root folder
    gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

    ## Grep on filename
    f = "!git ls-files | grep -i"

    ## Rename branch tree to done-
    done = "!f() { git branch | grep "$1" | cut -c 3- | grep -v done | xargs -I{} git branch -m {} done-{}; }; f"

    ## Assume aliases
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged

    ## Show assumed files
    assumed = "!git ls-files -v | grep ^h | cut -c 3-"

    ## Unassume all the assumed files
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
    assumeall = "!git st -s | awk {'print $2'} | xargs git assume"

    lasttag = describe --tags --abbrev=0
    lt = describe --tags --abbrev=0

    ## Merges
    ours = "!f() { git co --ours $@ && git add $@; }; f"
    theirs = "!f() { git co --theirs $@ && git add $@; }; f"

    ## List remotes
    rem = "!git config -l | grep remote.*url | tail -n +2"
# }}}

[core]
    pager = delta --plus-color="#012800" --minus-color="#340001" --theme='Monokai Extended'

[interactive]
    diffFilter = delta --color-only

[url "ssh://git@github.com/"]
  insteadOf = https://github.com/

